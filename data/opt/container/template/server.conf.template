server {
     listen 80;
     server_name ${nginx_units};

     return 301 https://$host$request_uri;
}

server {
     listen 443 ssl http2;
     server_name ${nginx_units};

     #
     # Reverse proxy configuration
     #

     proxy_pass_request_headers on;
     proxy_read_timeout ${NGINX_PROXY_READ_TIMEOUT};
     proxy_redirect off;
     proxy_set_header Host $host;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Host $host;
     proxy_set_header X-Forwarded-Server $host;
     proxy_set_header X-Forwarded-Proto $scheme;
     proxy_set_header X-Real-IP $remote_addr;

     #
     # Security headers
     #

     # Content-Type options.
     # See https://scotthelme.co.uk/hardening-your-http-response-headers/#x-content-type-options
     add_header X-Content-Type-Options 'nosniff' always;

     # HTTP Strict Transport Security.
     # See https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apaache_NGINX_and_Lighttpd.html
     add_header Strict-Transport-Security 'max-age=63072000; includeSubdomains; preload' always;

     # Frame options.
     # See https://scotthelme.co.uk/hardening-your-http-response-headers/#x-frame-options
     add_header X-Frame-Options 'DENY' always;

     # XSS protection.
     # See https://scotthelme.co.uk/hardening-your-http-response-headers/#x-xss-protection
     add_header X-XSS-Protection '1; mode=block' always;

     #
     # SSL settings
     #

     ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
     ssl_prefer_server_ciphers on;
     ssl_session_cache shared:SSL:10m;
     ssl_certificate /etc/letsencrypt/live/${nginx_hosts}/fullchain.pem;
     ssl_certificate_key /etc/letsencrypt/live/${nginx_hosts}/privkey.pem;

     # Recommended cipher suite per https://wiki.mozilla.org/Security/Server_Side_TLS
     ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

     # OCSP Stapling settings.
     # See https://raymii.org/s/tutorials/OCSP_Stapling_on_nginx.html
     ssl_stapling on;
     ssl_stapling_verify on;
     ssl_trusted_certificate /etc/ssl/certs/chain.letsencrypt.pem;
     resolver ${NGINX_RESOLVER} valid=300s;
     resolver_timeout 5s;

     # Diffie-Hellman Ephemeral parameter settings
     #ssl_dhparam /etc/ssl/dhparam.pem;

     # User-defined extra configuration.
     #include /etc/nginx/host/servers/${nginx_hosts}.conf.extra;

     #
     # Location settings
     #

     location / {
          # Remove user-defined headers.
          #more_clear_headers ${headers_clear};

          # Hidden location used by Let's Encrypt.
          location /.well-known/acme-challenge {
               root /var/www/letsencrypt-well-known;
          }

          # Unit configuration.
          include /opt/container/shared/etc/nginx/host/units/${nginx_hosts}/*.conf;
     }
}
